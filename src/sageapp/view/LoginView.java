
package sageapp.view;

import java.awt.BorderLayout;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import sageapp.DAO.AuthDAO;
import sageapp.model.AuthData;
import sageapp.model.LoginModel;
import sageapp.model.UpdatePasswordModel;

/**
 *
 * @author sangyakoirala
 */
 final class LoginView extends javax.swing.JFrame {
     boolean visibility= false;
      AuthDAO auth;
    /**
     * Creates new form Login
     */
    public LoginView() {
        auth = new AuthDAO();
        initComponents();
        uI();
        setSize(700, 400);
        setResizable(false); 
        setLocationRelativeTo(null);
    }
       void uI(){
        setTitle("Login Screen");
        setResizable(false);
        setLayout(new BorderLayout());
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setBounds(250, 10, 489, 650);
        setBackground(Color.decode(("#EBEBEB")));
        ImageIcon icon1 = new ImageIcon("Public\\logo.png");
//        logoutButton =  new javax.swing.JButton();
//        logoutButton.setBounds(1,1,100,100);
//        logoutButton.setIcon(icon1);
//        logoutButton.setBackground(Color.WHITE);
//        add(logoutButton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        haveAccountLabel3 = new javax.swing.JLabel();
        haveAccountLabel4 = new javax.swing.JLabel();
        subtitleLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        forgotPasswordLabel = new javax.swing.JLabel();
        noAccountLabel = new javax.swing.JLabel();
        welcomeLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        haveAccountLabel5 = new javax.swing.JLabel();
        haveAccountLabel6 = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        visibilityButton = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        haveAccountLabel3.setBackground(new java.awt.Color(0, 153, 153));
        haveAccountLabel3.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        haveAccountLabel3.setForeground(new java.awt.Color(51, 51, 51));
        haveAccountLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        haveAccountLabel3.setText("Email");

        haveAccountLabel4.setBackground(new java.awt.Color(0, 153, 153));
        haveAccountLabel4.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        haveAccountLabel4.setForeground(new java.awt.Color(51, 51, 51));
        haveAccountLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        haveAccountLabel4.setText("Password");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 153));
        setPreferredSize(new java.awt.Dimension(700, 400));

        subtitleLabel.setBackground(new java.awt.Color(0, 153, 153));
        subtitleLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        subtitleLabel.setForeground(new java.awt.Color(0, 102, 102));
        subtitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subtitleLabel.setText("Enter your credentials to login");

        titleLabel.setBackground(new java.awt.Color(0, 153, 153));
        titleLabel.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(0, 102, 102));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Login Form");

        emailTextField.setForeground(new java.awt.Color(102, 102, 102));
        emailTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        emailTextField.setText("csangya@gmail.com");
        emailTextField.setVerifyInputWhenFocusTarget(false);
        emailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextFieldActionPerformed(evt);
            }
        });

        loginButton.setBackground(new java.awt.Color(0, 102, 102));
        loginButton.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        loginButton.setForeground(new java.awt.Color(255, 255, 255));
        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        forgotPasswordLabel.setBackground(new java.awt.Color(0, 153, 153));
        forgotPasswordLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        forgotPasswordLabel.setForeground(new java.awt.Color(51, 153, 255));
        forgotPasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        forgotPasswordLabel.setText("Forgot Password?");
        forgotPasswordLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                forgotPasswordLabelMouseClicked(evt);
            }
        });

        noAccountLabel.setBackground(new java.awt.Color(0, 153, 153));
        noAccountLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        noAccountLabel.setForeground(new java.awt.Color(51, 51, 51));
        noAccountLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        noAccountLabel.setText("Do not have an account?");

        welcomeLabel4.setBackground(new java.awt.Color(0, 153, 153));
        welcomeLabel4.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        welcomeLabel4.setForeground(new java.awt.Color(0, 153, 204));
        welcomeLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeLabel4.setText("Register");
        welcomeLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                welcomeLabel4MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagepicker/logo1.png"))); // NOI18N

        haveAccountLabel5.setBackground(new java.awt.Color(0, 153, 153));
        haveAccountLabel5.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        haveAccountLabel5.setForeground(new java.awt.Color(51, 51, 51));
        haveAccountLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        haveAccountLabel5.setText("Email");

        haveAccountLabel6.setBackground(new java.awt.Color(0, 153, 153));
        haveAccountLabel6.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        haveAccountLabel6.setForeground(new java.awt.Color(51, 51, 51));
        haveAccountLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        haveAccountLabel6.setText("Password");

        passwordTextField.setText("1234");

        visibilityButton.setText("Show");
        visibilityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visibilityButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(titleLabel)
                    .addComponent(subtitleLabel))
                .addGap(250, 250, 250))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(haveAccountLabel5)
                    .addComponent(haveAccountLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(forgotPasswordLabel))
                            .addComponent(emailTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loginButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .addComponent(passwordTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(visibilityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(noAccountLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(welcomeLabel4)
                        .addGap(97, 97, 97))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subtitleLabel)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(haveAccountLabel5))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(haveAccountLabel6)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(visibilityButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(forgotPasswordLabel)
                .addGap(24, 24, 24)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noAccountLabel)
                    .addComponent(welcomeLabel4))
                .addGap(82, 82, 82))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextFieldActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        String email = emailTextField.getText();
        if(email.isEmpty() || email == ""){
            JOptionPane.showMessageDialog(this, "Please enter an email");
            return;
        }
        String password = passwordTextField.getText();
        if(password.isEmpty() ||  "".equals(password)){
            JOptionPane.showMessageDialog(this, "Please enter a password");
            return;
        }
        LoginModel lm = new LoginModel(email, password);
       
        AuthData user = auth.login(lm);
        if(user == null){
            JOptionPane.showMessageDialog(this, "Invalid Credentials");
        }else{
            // login success
            JOptionPane.showMessageDialog(this, "Login Success");
            AddProductView ds = new AddProductView(user);
            ds.setVisible(true);
            this.dispose();
        }

        //        if (evt.getSource().equals(registerButton)) {
            //               new RegisterView().setVisible(true);
            //        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void welcomeLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_welcomeLabel4MouseClicked
        // TODO add your handling code here:
        if (evt.getSource().equals(welcomeLabel4)) {
            new RegistrationView().setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_welcomeLabel4MouseClicked

    private void visibilityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visibilityButtonActionPerformed

      
        if (this.visibility) {
        visibilityButton.setText("Hide");
        passwordTextField.setEchoChar((char) 0); // Show text (no masking)
    } else {
        visibilityButton.setText("Show");
        passwordTextField.setEchoChar('*'); // Hide text (mask input)
    }
          this.visibility = !visibility;
    }//GEN-LAST:event_visibilityButtonActionPerformed

    private void forgotPasswordLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgotPasswordLabelMouseClicked
   // Step 1: Prompt the user for their email to reset the password
    String emailToReset = JOptionPane.showInputDialog(this, "Enter your email address to reset password:");
    
    // Step 2: Check if the user exists
    int result = auth.getUserIdByEmail(emailToReset);
    
    if (result == -1) {
        // User does not exist
        JOptionPane.showMessageDialog(this, "User with this email does not exist.", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        // User found, generate and send OTP
        System.out.println("User Found");
        
        String otpResponse = auth.generateAndSendOTP(emailToReset);
        
        if (otpResponse == null) {
            // OTP generation failed
            JOptionPane.showMessageDialog(this, "Failed to generate OTP. Please try again later.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            // Step 3: Ask the user to enter the OTP
            String otpEntered = JOptionPane.showInputDialog(this, "Enter the OTP sent to your email:");
            
            if (otpEntered != null && otpEntered.equals(otpResponse)) {
                // OTP is correct, allow the user to enter a new password and confirm password
                String newPassword = JOptionPane.showInputDialog(this, "Enter your new password:");
                String confirmPassword = JOptionPane.showInputDialog(this, "Confirm your new password:");
                
                if (newPassword.equals(confirmPassword)) {
                    // Step 4: Update the password in the database (no hashing, store as is)
                    UpdatePasswordModel updatePassword = new UpdatePasswordModel(result, newPassword);
                    
                  try{
                        // Step 5: Perform password update
                    AuthData user = auth.updatePassword(updatePassword, result); // Assuming result is the user ID
                    
                    boolean passwordUpdated = (user != null);
                    
                    if (passwordUpdated) {
                        // Password update successful
                        JOptionPane.showMessageDialog(this, "Password successfully updated.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        // Password update failed
                        JOptionPane.showMessageDialog(this, "Failed to update password. Please try again later.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                  } catch (Exception e){
                      
                  }
                } else {
                    // Passwords do not match
                    JOptionPane.showMessageDialog(this, "Passwords do not match. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                // OTP is incorrect
                JOptionPane.showMessageDialog(this, "Incorrect OTP. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    }//GEN-LAST:event_forgotPasswordLabelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel forgotPasswordLabel;
    private javax.swing.JLabel haveAccountLabel3;
    private javax.swing.JLabel haveAccountLabel4;
    private javax.swing.JLabel haveAccountLabel5;
    private javax.swing.JLabel haveAccountLabel6;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel noAccountLabel;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JLabel subtitleLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton visibilityButton;
    private javax.swing.JLabel welcomeLabel4;
    // End of variables declaration//GEN-END:variables

 }
