
package sageapp.view;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import sageapp.DAO.CustomerDAO;
import sageapp.model.AuthData;
import sageapp.DAO.ProductDAO;
import sageapp.model.CustomerModel;


/**
 *
 * @author sangyakoirala
 */
 final class CreateBillView extends javax.swing.JFrame {
     AuthData user;
     int uid;
     boolean customerExists=false;
     ProductDAO productDao= new ProductDAO();
     List<String> allProducts;
     List<String> availableProducts;
     List<String> selectedProducts;
     Map<String, Integer> productQuantityMap;
    /**
     * Creates new form Login
     */
    public CreateBillView(AuthData user) {
        initComponents();
        
        this.user = user;
        this.uid=user.getUid();
        System.out.println("uid "+uid);
        this.allProducts=productDao.findProductNamesByUid(uid);
        this.availableProducts=this.allProducts;
        this.selectedProducts= new ArrayList<>();
        this.productQuantityMap = new HashMap<>();
        uI();
        for (String item : allProducts) {
        productNameDropDown.addItem(item);
        }
        setSize(700, 400);
        setResizable(false); 
        setLocationRelativeTo(null);
    }
       void uI(){
        setTitle("Add Product View");
        setResizable(false);
        setLayout(new BorderLayout());
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setBounds(250, 10, 489, 650);
        setBackground(Color.decode(("#EBEBEB")));
        ImageIcon icon1 = new ImageIcon("Public\\logo.png");
//        logoutButton =  new javax.swing.JButton();
//        logoutButton.setBounds(1,1,100,100);
//        logoutButton.setIcon(icon1);
//        logoutButton.setBackground(Color.WHITE);
//        add(logoutButton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        popupMenu1 = new java.awt.PopupMenu();
        visibilityButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        addProductButton = new javax.swing.JButton();
        viewProductButton = new javax.swing.JButton();
        billingButton = new javax.swing.JButton();
        historyButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        calculateBillButton = new javax.swing.JButton();
        productNameLabel = new javax.swing.JLabel();
        customerNumberLabel = new javax.swing.JLabel();
        customerNumberTextField = new javax.swing.JTextField();
        customerNameTextField = new javax.swing.JTextField();
        customerNameLabel = new javax.swing.JLabel();
        productNameDropDown = new javax.swing.JComboBox<>();
        productPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        addNewProduct = new javax.swing.JButton();
        customerNameLabel1 = new javax.swing.JLabel();
        quantityTextField = new javax.swing.JTextField();
        logoutButton = new javax.swing.JButton();
        profileButton = new javax.swing.JButton();
        visibilityButton2 = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        popupMenu1.setLabel("popupMenu1");

        visibilityButton1.setText("Show");
        visibilityButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visibilityButton1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 153));
        setPreferredSize(new java.awt.Dimension(698, 390));

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagepicker/logo1.png"))); // NOI18N

        addProductButton.setText("Add Product");
        addProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductButtonActionPerformed(evt);
            }
        });

        viewProductButton.setText("View Product");
        viewProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProductButtonActionPerformed(evt);
            }
        });

        billingButton.setText("Billing");

        historyButton.setText("History");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        titleLabel.setBackground(new java.awt.Color(0, 153, 153));
        titleLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(0, 102, 102));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Enter the Product Details");

        calculateBillButton.setBackground(new java.awt.Color(0, 102, 102));
        calculateBillButton.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        calculateBillButton.setForeground(new java.awt.Color(255, 255, 255));
        calculateBillButton.setText("Calculate Bill");
        calculateBillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateBillButtonActionPerformed(evt);
            }
        });

        productNameLabel.setBackground(new java.awt.Color(0, 153, 153));
        productNameLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        productNameLabel.setForeground(new java.awt.Color(51, 51, 51));
        productNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        productNameLabel.setText("Select Products");

        customerNumberLabel.setBackground(new java.awt.Color(0, 153, 153));
        customerNumberLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        customerNumberLabel.setForeground(new java.awt.Color(51, 51, 51));
        customerNumberLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        customerNumberLabel.setText("Customer No.");

        customerNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNumberTextFieldActionPerformed(evt);
            }
        });

        customerNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameTextFieldActionPerformed(evt);
            }
        });

        customerNameLabel.setBackground(new java.awt.Color(0, 153, 153));
        customerNameLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        customerNameLabel.setForeground(new java.awt.Color(51, 51, 51));
        customerNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        customerNameLabel.setText("Name");

        productNameDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNameDropDownActionPerformed(evt);
            }
        });

        // Wrap the product panel in a JScrollPane
        JScrollPane jScrollPane1 = new JScrollPane(productPanel);
        add(jScrollPane1, BorderLayout.CENTER);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
            },
            new String [] {
                "Product", "Quantity", "Price"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout productPanelLayout = new javax.swing.GroupLayout(productPanel);
        productPanel.setLayout(productPanelLayout);
        productPanelLayout.setHorizontalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(153, Short.MAX_VALUE))
        );
        productPanelLayout.setVerticalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, productPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        addNewProduct.setText("Add Product");
        addNewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewProductActionPerformed(evt);
            }
        });

        customerNameLabel1.setBackground(new java.awt.Color(0, 153, 153));
        customerNameLabel1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        customerNameLabel1.setForeground(new java.awt.Color(51, 51, 51));
        customerNameLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        customerNameLabel1.setText("Quantity");

        quantityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calculateBillButton, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(titleLabel)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(productNameLabel)
                            .addComponent(customerNumberLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addNewProduct)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(productPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(customerNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(customerNameLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(customerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(productNameDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(customerNameLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(quantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNumberLabel)
                    .addComponent(customerNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerNameLabel))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productNameLabel)
                    .addComponent(productNameDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerNameLabel1)
                    .addComponent(quantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addNewProduct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(productPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(calculateBillButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        logoutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagepicker/logoutIcon.png"))); // NOI18N
        logoutButton.setIconTextGap(0);
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        profileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagepicker/profileIcon.png"))); // NOI18N
        profileButton.setIconTextGap(0);
        profileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileButtonMouseClicked(evt);
            }
        });
        profileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileButtonActionPerformed(evt);
            }
        });

        visibilityButton2.setText("Show");
        visibilityButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visibilityButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(addProductButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(viewProductButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(billingButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(historyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(profileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(319, 319, 319)
                    .addComponent(visibilityButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(576, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(profileButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logoutButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(billingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(historyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(184, 184, 184)
                    .addComponent(visibilityButton2)
                    .addContainerGap(631, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductButtonActionPerformed
        AddProductView ds = new AddProductView(user);
        ds.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addProductButtonActionPerformed

    private void calculateBillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateBillButtonActionPerformed
     
                                                
    ProductDAO productDAO = new ProductDAO();
    String phone=customerNumberTextField.getText();
    String name = (String) productNameDropDown.getItemAt(0);
//    String quantityText=quantityTextField.getText();
    String customerName = customerNameTextField.getText();     
   

    // Check if any field is empty
    if (name.isEmpty() || customerName.isEmpty() || phone.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Fill all the details");
        return; // Stop execution
    } 
    if (!this.customerExists){
        CustomerDAO customer= new CustomerDAO();
        CustomerModel customerModel= new CustomerModel(phone,name);
        customer.addCustomer(customerModel, uid);
    }

    // Validate if price and stock are valid numbers
    int quantity;

    try {
//        quantity = Integer.parseInt(quantityText);
     
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Price and Stock must be numbers.");
        return;
    }

    // Create ProductModel object
//    BillingModel pm = new BillingModel(uid,name, description, price, stock);

    // Add product to database
//    boolean check = productDAO.addProduct(pm,uid);
//    if (check) {
//        JOptionPane.showMessageDialog(null, "Product Added Successfully");
//        System.out.println("Insert Success");
//         BillingView ds = new BillingView(user);
//            ds.setVisible(true);
//            this.dispose();
//    } else {
//        JOptionPane.showMessageDialog(null, "Failed to Add Product");
//        System.out.println("Insert Failure");
//    }
     



             // TODO add your handling code here:
   
    }//GEN-LAST:event_calculateBillButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
     int response = JOptionPane.showConfirmDialog(
        this, 
        "Are you sure you want to log out?", 
        "Logout Confirmation", 
        JOptionPane.YES_NO_OPTION, 
        JOptionPane.QUESTION_MESSAGE
    );

    if (response != JOptionPane.YES_OPTION) {
        return; // Exit the method without logging out if the user selects "No"
    }

    LoginView loginView = new LoginView();
    loginView.setSize(700, 400);
    loginView.setLocationRelativeTo(null);
    loginView.setVisible(true);
    this.dispose();  // Close the current window
        
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void profileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileButtonActionPerformed
        // TODO add your handling code here:
    ProfileView productView;
         try {
             productView = new ProfileView(uid);
             
    productView.setSize(700, 400);
    productView.setLocationRelativeTo(null);
    productView.setVisible(true);
         } catch (IOException ex) {
             Logger.getLogger(CreateBillView.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_profileButtonActionPerformed

    private void viewProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProductButtonActionPerformed
        // TODO add your handling code here:
         ViewProducts productView = new ViewProducts(user);
    productView.setSize(700, 400);
    productView.setLocationRelativeTo(null);
    productView.setVisible(true);
    this.dispose();  // Close the current window
    }//GEN-LAST:event_viewProductButtonActionPerformed

    private void profileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_profileButtonMouseClicked

    private void visibilityButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visibilityButton2ActionPerformed
    
    }//GEN-LAST:event_visibilityButton2ActionPerformed

    private void visibilityButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visibilityButton1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
       
    }//GEN-LAST:event_visibilityButton1ActionPerformed

    private void customerNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNumberTextFieldActionPerformed
        // TODO add your handling code here:
         String phone=customerNumberTextField.getText();
         CustomerDAO cd= new CustomerDAO();
         String name= cd.findCustomer(phone,uid);
         if (name!=null){
             customerNameTextField.setText(name);
             this.customerExists=true;   
             customerNameTextField.setEnabled(false);
         } else {
             this.customerExists=false;
             customerNameTextField.setEnabled(true);
         }
    }//GEN-LAST:event_customerNumberTextFieldActionPerformed

    private void customerNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameTextFieldActionPerformed

    private void productNameDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productNameDropDownActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_productNameDropDownActionPerformed

    private void quantityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTextFieldActionPerformed
  private void updateProductPanel() {
        // Clear the productPanel before updating
        productPanel.removeAll();

        // Loop through the selected products and add them to the productPanel
        for (String product : selectedProducts) {
            int quantity = productQuantityMap.get(product);
            
            // Create a new panel for each product
            JPanel productItemPanel = new JPanel();
            productItemPanel.setLayout(new FlowLayout(FlowLayout.LEFT));
            
            // Create labels to display product name and quantity
            JLabel productLabel = new JLabel("Product: " + product);
            JLabel quantityLabel = new JLabel("Quantity: " + quantity);
            
            // Add labels to the productItemPanel
            productItemPanel.add(productLabel);
            productItemPanel.add(quantityLabel);
            
            // Add the productItemPanel to the productPanel
            productPanel.add(productItemPanel);
        }

        // Refresh the JScrollPane to update the UI
        productPanel.revalidate();
        productPanel.repaint();
    }
    private void addNewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewProductActionPerformed
        // TODO add your handling code here:
            String quantityText=quantityTextField.getText();
             // Validate that the quantity field is not empty and contains a valid integer
    if (quantityText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a quantity.");
        return;
    }
            int quantity = 0;
    try {
        quantity = Integer.parseInt(quantityText);
        if (quantity <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a positive quantity.");
            return;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid quantity entered. Please enter a valid number.");
        return;
    }

    // Get the selected product from the dropdown
    String item = (String) productNameDropDown.getSelectedItem();

    // Ensure that a product is selected
    if (item == null || item.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please select a product.");
        return;
    }

    // Check if the item is not null and not already added to the selectedProducts list
    if (!selectedProducts.contains(item)) {
        // Add the selected product to the selectedProducts list
        selectedProducts.add(item);
        
        // Add the product and its quantity to the productQuantityMap
        productQuantityMap.put(item, quantity);
        
        // Remove the selected product from availableProducts list
        availableProducts.remove(item);
        
        // Update the dropdown to remove the selected product from the available options
        productNameDropDown.setModel(new DefaultComboBoxModel<>(availableProducts.toArray(new String[0])));
        updateProductPanel();
        // Display the added product and its quantity
        System.out.println("Product Added: " + item + " with Quantity: " + quantity);  
    } else {
        JOptionPane.showMessageDialog(this, "This product is already selected.");
    }
    }//GEN-LAST:event_addNewProductActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateBillView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateBillView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateBillView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateBillView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddProductView(user).setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewProduct;
    private javax.swing.JButton addProductButton;
    private javax.swing.JButton billingButton;
    private javax.swing.JButton calculateBillButton;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JLabel customerNameLabel1;
    private javax.swing.JTextField customerNameTextField;
    private javax.swing.JLabel customerNumberLabel;
    private javax.swing.JTextField customerNumberTextField;
    private javax.swing.JButton historyButton;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logoutButton;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JComboBox<String> productNameDropDown;
    private javax.swing.JLabel productNameLabel;
    private javax.swing.JPanel productPanel;
    private javax.swing.JButton profileButton;
    private javax.swing.JTextField quantityTextField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton viewProductButton;
    private javax.swing.JButton visibilityButton1;
    private javax.swing.JButton visibilityButton2;
    // End of variables declaration//GEN-END:variables

 }
