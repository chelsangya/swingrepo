
package sageapp.view;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import sageapp.DAO.BillDAO;
import sageapp.DAO.CustomerDAO;
import sageapp.model.AuthData;
import sageapp.DAO.ProductDAO;
import sageapp.model.BillModel;
import sageapp.model.CustomerModel;
import sageapp.model.ProductData;


/**
 *
 * @author sangyakoirala
 */
 final class BillingView extends javax.swing.JFrame {
      AuthData user;
     int uid;
     boolean customerExists=false;
     ProductDAO productDao= new ProductDAO();
     int totalPrice;
     List<String> allProducts;
     List<String> availableProducts;
     List<ProductData> selectedProducts;
     Map<ProductData,Integer> productQuantityMap;
     boolean changed=false;
     private JTable productTable;
    private DefaultTableModel tableModel;
     CustomerDAO cd= new CustomerDAO();
    /**
     * Creates new form Login
     */
    public BillingView(AuthData user) {
       initComponents();
         System.out.println("BILLING VIEW "+uid);
        this.user = user;
        this.totalPrice=0;
        this.uid=user.getUid();
        System.out.println("uid "+uid);
        this.allProducts=productDao.findProductNamesByUid(uid);
        this.availableProducts=this.allProducts;
        this.selectedProducts= new ArrayList<>();
        this.productQuantityMap= new HashMap<>();
        uI();
        for (String item : allProducts) {
        productNameDropDown.addItem(item);
        }
        setSize(700, 400);
        setResizable(false); 
        setLocationRelativeTo(null);
    }
       void uI(){
        setTitle("Add Product View");
        setResizable(false);
        setLayout(new BorderLayout());
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setBounds(250, 10, 489, 650);
        setBackground(Color.decode(("#EBEBEB")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        popupMenu1 = new java.awt.PopupMenu();
        visibilityButton1 = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        customerNumberLabel = new javax.swing.JLabel();
        customerNumberTextField = new javax.swing.JTextField();
        customerNameLabel = new javax.swing.JLabel();
        customerNameTextField = new javax.swing.JTextField();
        titleLabel1 = new javax.swing.JLabel();
        lineBorder1 = (javax.swing.border.LineBorder)javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0));
        etchedBorder1 = (javax.swing.border.EtchedBorder)javax.swing.BorderFactory.createEtchedBorder();
        matteBorder1 = new javax.swing.border.MatteBorder(null);
        softBevelBorder1 = new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED);
        emptyBorder1 = (javax.swing.border.EmptyBorder)javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1);
        calculateBillButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        addProductButton = new javax.swing.JButton();
        viewProductButton = new javax.swing.JButton();
        billingButton = new javax.swing.JButton();
        historyButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        quantityTextField = new javax.swing.JTextField();
        numberTextField = new javax.swing.JTextField();
        customerNumberLabel1 = new javax.swing.JLabel();
        titleLabel3 = new javax.swing.JLabel();
        customerNameLabel2 = new javax.swing.JLabel();
        createBillButton = new javax.swing.JButton();
        customerNameLabel3 = new javax.swing.JLabel();
        customerNameLabel4 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        customerNameLabel5 = new javax.swing.JLabel();
        productNameDropDown = new javax.swing.JComboBox<>();
        addNewProduct = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        productsTable = new javax.swing.JTable();
        logoutButton = new javax.swing.JButton();
        profileButton = new javax.swing.JButton();
        visibilityButton2 = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        popupMenu1.setLabel("popupMenu1");

        visibilityButton1.setText("Show");
        visibilityButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visibilityButton1ActionPerformed(evt);
            }
        });

        titleLabel.setBackground(new java.awt.Color(0, 153, 153));
        titleLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(0, 102, 102));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Enter the Product Details");

        customerNumberLabel.setBackground(new java.awt.Color(0, 153, 153));
        customerNumberLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        customerNumberLabel.setForeground(new java.awt.Color(51, 51, 51));
        customerNumberLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        customerNumberLabel.setText("Customer No.");

        customerNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNumberTextFieldActionPerformed(evt);
            }
        });

        customerNameLabel.setBackground(new java.awt.Color(0, 153, 153));
        customerNameLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        customerNameLabel.setForeground(new java.awt.Color(51, 51, 51));
        customerNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        customerNameLabel.setText("Customer Name");

        customerNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameTextFieldActionPerformed(evt);
            }
        });

        titleLabel1.setBackground(new java.awt.Color(0, 153, 153));
        titleLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        titleLabel1.setForeground(new java.awt.Color(0, 102, 102));
        titleLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel1.setText("Enter the Product Details");

        calculateBillButton1.setBackground(new java.awt.Color(0, 102, 102));
        calculateBillButton1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        calculateBillButton1.setForeground(new java.awt.Color(255, 255, 255));
        calculateBillButton1.setText("Calculate Bill");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 153));

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagepicker/logo1.png"))); // NOI18N

        addProductButton.setText("Add Product");
        addProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductButtonActionPerformed(evt);
            }
        });

        viewProductButton.setText("View Product");
        viewProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProductButtonActionPerformed(evt);
            }
        });

        billingButton.setText("Billing");
        billingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billingButtonActionPerformed(evt);
            }
        });

        historyButton.setText("History");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        quantityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTextFieldActionPerformed(evt);
            }
        });

        numberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberTextFieldActionPerformed(evt);
            }
        });

        customerNumberLabel1.setBackground(new java.awt.Color(0, 153, 153));
        customerNumberLabel1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        customerNumberLabel1.setForeground(new java.awt.Color(51, 51, 51));
        customerNumberLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        customerNumberLabel1.setText("Customer No.");

        titleLabel3.setBackground(new java.awt.Color(0, 153, 153));
        titleLabel3.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        titleLabel3.setForeground(new java.awt.Color(0, 102, 102));
        titleLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel3.setText("Create New Bill");

        customerNameLabel2.setBackground(new java.awt.Color(0, 153, 153));
        customerNameLabel2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        customerNameLabel2.setForeground(new java.awt.Color(51, 51, 51));
        customerNameLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        customerNameLabel2.setText("Products");

        createBillButton.setBackground(new java.awt.Color(0, 102, 102));
        createBillButton.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        createBillButton.setForeground(new java.awt.Color(255, 255, 255));
        createBillButton.setText("Create Bill");
        createBillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBillButtonActionPerformed(evt);
            }
        });

        customerNameLabel3.setBackground(new java.awt.Color(0, 153, 153));
        customerNameLabel3.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        customerNameLabel3.setForeground(new java.awt.Color(51, 51, 51));
        customerNameLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        customerNameLabel3.setText("Quantity");

        customerNameLabel4.setBackground(new java.awt.Color(0, 153, 153));
        customerNameLabel4.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        customerNameLabel4.setForeground(new java.awt.Color(51, 51, 51));
        customerNameLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        customerNameLabel4.setText("Name");

        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });

        customerNameLabel5.setBackground(new java.awt.Color(0, 153, 153));
        customerNameLabel5.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        customerNameLabel5.setForeground(new java.awt.Color(51, 51, 51));
        customerNameLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        customerNameLabel5.setText("Product Name");

        productNameDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNameDropDownActionPerformed(evt);
            }
        });

        addNewProduct.setText("Add Product");
        addNewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewProductActionPerformed(evt);
            }
        });

        tableModel = new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
            },
            new String [] {
                "Product", "Quantity", "Price"
            }
        );
        productsTable.setModel(
            tableModel);
        // Wrap the table in a JScrollPane (optional, depending on your layout)
        jScrollPane2.setViewportView(productsTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(customerNumberLabel1)
                    .addComponent(customerNameLabel2)
                    .addComponent(customerNameLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addNewProduct)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(productNameDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(customerNameLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(createBillButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titleLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(numberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(customerNameLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameTextField))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNumberLabel1)
                    .addComponent(numberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerNameLabel4)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerNameLabel3)
                    .addComponent(customerNameLabel5)
                    .addComponent(productNameDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addNewProduct)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customerNameLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createBillButton)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        logoutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagepicker/logoutIcon.png"))); // NOI18N
        logoutButton.setIconTextGap(0);
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        profileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagepicker/profileIcon.png"))); // NOI18N
        profileButton.setIconTextGap(0);
        profileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileButtonMouseClicked(evt);
            }
        });
        profileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileButtonActionPerformed(evt);
            }
        });

        visibilityButton2.setText("Show");
        visibilityButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visibilityButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(addProductButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(viewProductButton, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(billingButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(historyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(438, 438, 438)
                        .addComponent(profileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(14, 14, 14))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(319, 319, 319)
                    .addComponent(visibilityButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(319, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1)
                        .addGap(0, 14, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(profileButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logoutButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(billingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(historyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(184, 184, 184)
                    .addComponent(visibilityButton2)
                    .addContainerGap(197, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductButtonActionPerformed
        AddProductView ds = new AddProductView(user);
        ds.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addProductButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
     int response = JOptionPane.showConfirmDialog(
        this, 
        "Are you sure you want to log out?", 
        "Logout Confirmation", 
        JOptionPane.YES_NO_OPTION, 
        JOptionPane.QUESTION_MESSAGE
    );

    if (response != JOptionPane.YES_OPTION) {
        return; // Exit the method without logging out if the user selects "No"
    }

    LoginView loginView = new LoginView();
    loginView.setSize(700, 400);
    loginView.setLocationRelativeTo(null);
    loginView.setVisible(true);
    this.dispose();  // Close the current window
        
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void profileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileButtonActionPerformed
        // TODO add your handling code here:
    ProfileView productView;
         try {
             productView = new ProfileView(uid);
             
    productView.setSize(700, 400);
    productView.setLocationRelativeTo(null);
    productView.setVisible(true);
         } catch (IOException ex) {
             Logger.getLogger(BillingView.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_profileButtonActionPerformed

    private void viewProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProductButtonActionPerformed
        // TODO add your handling code here:
         ViewProducts productView = new ViewProducts(user);
    productView.setSize(700, 400);
    productView.setLocationRelativeTo(null);
    productView.setVisible(true);
    this.dispose();  // Close the current window
    }//GEN-LAST:event_viewProductButtonActionPerformed

    private void profileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_profileButtonMouseClicked

    private void visibilityButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visibilityButton2ActionPerformed
    
    }//GEN-LAST:event_visibilityButton2ActionPerformed

    private void visibilityButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visibilityButton1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
       
    }//GEN-LAST:event_visibilityButton1ActionPerformed

    private void customerNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNumberTextFieldActionPerformed
        // TODO add your handling code here:
        String phone=customerNumberTextField.getText();
        String name= cd.findCustomer(phone,uid);
        if (name!=null){
            customerNameTextField.setText(name);
            this.customerExists=true;
            customerNameTextField.setEnabled(false);
        } else {
            this.customerExists=false;
            customerNameTextField.setEnabled(true);
        }
    }//GEN-LAST:event_customerNumberTextFieldActionPerformed

    private void customerNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameTextFieldActionPerformed
private void updateProductPanel() {
    if (changed) {
        System.out.println("Updating product panel...");

        // Clear the existing rows in the table
        tableModel.setRowCount(0);
        int tempPrice=0;
        totalPrice=0;
        // Loop through the selected products and add them to the table model
        for (ProductData product : selectedProducts) {
            // Get the quantity for each product from the productQuantityMap
            int quantity = productQuantityMap.get(product);

            // Get the price for each product (assuming ProductData has a getPrice() method)
            int price = product.getPrice();  // Replace with actual method to get price
            tempPrice= quantity*price;
            totalPrice+=tempPrice;
            // Add product, quantity, and price as a new row in the table model
            tableModel.addRow(new Object[]{product.getName(), quantity, price});
            System.out.println("Product:: Name "+product.getName()+" Quantity"+quantity+"Price "+price);
        }

        // Refresh the table view
        productsTable.revalidate();  // Ensure the layout is updated
        productsTable.repaint();     // Refresh the table rendering

        // Optionally, scroll to the top if you want to highlight the new changes
        productsTable.scrollRectToVisible(productsTable.getCellRect(0, 0, true));

        // Reset the change flag
        changed = false;
    }
}

  

    private void billingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billingButtonActionPerformed
        // TODO add your handling code here:
  
    }//GEN-LAST:event_billingButtonActionPerformed

    private void addNewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewProductActionPerformed
        // TODO add your handling code here:
     // Validate that the quantity field is not empty and contains a valid integer
    String quantityText = quantityTextField.getText();
    if (quantityText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a quantity.");
        return;
    }

    int quantity = 0;
    try {
        quantity = Integer.parseInt(quantityText);
        if (quantity <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter a positive quantity.");
            return;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid quantity entered. Please enter a valid number.");
        return;
    }

    // Get the selected product from the dropdown
    String item = (String) productNameDropDown.getSelectedItem();
    ProductData product = productDao.findProductByName(item);
    System.out.println("SELECTED PRODUCT::"+product);

    // Ensure that a product is selected
    if (item== null) {
        JOptionPane.showMessageDialog(this, "Please select a product.");
        return;
    }
    // Check if the product is already selected
    if (!selectedProducts.contains(product)) {
        // Add the selected product to the selectedProducts list
        selectedProducts.add(product);

        // Add the product and its quantity to the productQuantityMap
        productQuantityMap.put(product, quantity);

        // Remove the selected product from availableProducts list
        availableProducts.remove(item);

        // Update the dropdown to remove the selected product from the available options
        productNameDropDown.setModel(new DefaultComboBoxModel<>(availableProducts.toArray(new String[0])));
               changed = true;
        updateProductPanel() ;
      
 

    } else {
        JOptionPane.showMessageDialog(this, "This product is already selected.");
    }
    }//GEN-LAST:event_addNewProductActionPerformed

    private void productNameDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productNameDropDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productNameDropDownActionPerformed

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void createBillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBillButtonActionPerformed
                                           
    // TODO add your handling code here:
    String phone = numberTextField.getText();
    String name = nameTextField.getText();
    
    // Check if the customer exists, if not, create a new customer
    if (!customerExists) {
        CustomerModel customer = new CustomerModel(phone, name);
        cd.addCustomer(customer, uid); // Assume this adds the customer to the database
    }
    
    // Create the bill and add it to the database
    BillDAO billDao = new BillDAO();
    BillModel bill = new BillModel(uid, phone, totalPrice, productQuantityMap);
    boolean billSaved = billDao.addBill(bill);
    
    // Show confirmation popup
    if (billSaved) {
        int option = JOptionPane.showConfirmDialog(
                null, 
                "Bill has been saved. Do you want to print?", 
                "Bill Saved", 
                JOptionPane.YES_NO_OPTION
        );
        
        // Handle the option selected by the user
        if (option == JOptionPane.YES_OPTION) {
            // Code to print the bill, assuming a printBill method exists
            printBill(bill);
        } else {
            // Option to cancel, you can add any actions needed on cancel here
            System.out.println("Print canceled.");
        }
    } else {
        JOptionPane.showMessageDialog(
                null, 
                "Failed to save the bill. Please try again.", 
                "Error", 
                JOptionPane.ERROR_MESSAGE
        );
    }


        
    }//GEN-LAST:event_createBillButtonActionPerformed

 private void printBill(BillModel bill) {
    // Fetch customer details from the UI
    String customerName = nameTextField.getText();
    String customerNumber = numberTextField.getText();

    // Start building the bill details
    StringBuilder billDetails = new StringBuilder();
    billDetails.append("Customer Name: ").append(customerName).append("\n");
    billDetails.append("Customer Phone: ").append(customerNumber).append("\n\n");
    billDetails.append("---------------------------------------------------------\n");
    billDetails.append("Product Name\t\tPrice\tQuantity\tTotal\n");
    billDetails.append("---------------------------------------------------------\n");

    // Variable to store the total price of the bill
    double totalBillPrice = 0.0;

    // Loop through the products in the bill and display them
    for (Map.Entry<ProductData, Integer> entry : bill.getProductQuantityMap().entrySet()) {
        ProductData product = entry.getKey();
        Integer quantity = entry.getValue();
        
        // Get product details (name and price) from ProductData object
        String productName = product.getName();
        double productPrice = product.getPrice();
        
        // Calculate the total price for this product (price * quantity)
        double productTotalPrice = productPrice * quantity;
        
        // Add this product's details to the bill details
        billDetails.append(String.format("%-18s\t%.2f\t%d\t\t%.2f\n", productName, productPrice, quantity, productTotalPrice));
        
        // Add the product total price to the overall bill total
        totalBillPrice += productTotalPrice;
    }

    // Add total price at the bottom
    billDetails.append("----------------------------------------\n")
               .append("Total Price: $").append(String.format("%.2f", totalBillPrice)).append("\n");

    // Create a JTextArea to display the bill details
    JTextArea textArea = new JTextArea(billDetails.toString());
    textArea.setEditable(false); // Make the text area non-editable
    textArea.setLineWrap(true);
    textArea.setWrapStyleWord(true);
    
    // Increase the font size for better readability
    textArea.setFont(new Font("Monospaced", Font.PLAIN, 14));

    // Create a JScrollPane to allow scrolling if the content overflows
    JScrollPane scrollPane = new JScrollPane(textArea);
    scrollPane.setPreferredSize(new Dimension(500, 300)); // Set a larger preferred size for the scroll pane

    // Show the bill details in a dialog box with a larger size
    JOptionPane.showMessageDialog(
        null,
        scrollPane,
        "Bill Details",
        JOptionPane.INFORMATION_MESSAGE
    );
}

    private String getProductNameById(Integer productId) {
    // This is a placeholder method. Implement logic to fetch product name by ID.
    // Example: Query the products table and get the name of the product
    return "Product " + productId; // Replace with actual product name
}

    private void numberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberTextFieldActionPerformed
        // TODO add your handling code here:
        String phone=numberTextField.getText();
        String name= cd.findCustomer(phone,uid);
        if (name!=null){
            nameTextField.setText(name);
            this.customerExists=true;
            nameTextField.setEnabled(false);
        } else {
            nameTextField.setText("");
            this.customerExists=false;
            nameTextField.setEnabled(true);
        }
    }//GEN-LAST:event_numberTextFieldActionPerformed

    private void quantityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillingView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
         
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewProduct;
    private javax.swing.JButton addProductButton;
    private javax.swing.JButton billingButton;
    private javax.swing.JButton calculateBillButton1;
    private javax.swing.JButton createBillButton;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JLabel customerNameLabel2;
    private javax.swing.JLabel customerNameLabel3;
    private javax.swing.JLabel customerNameLabel4;
    private javax.swing.JLabel customerNameLabel5;
    private javax.swing.JTextField customerNameTextField;
    private javax.swing.JLabel customerNumberLabel;
    private javax.swing.JLabel customerNumberLabel1;
    private javax.swing.JTextField customerNumberTextField;
    private javax.swing.border.EmptyBorder emptyBorder1;
    private javax.swing.border.EtchedBorder etchedBorder1;
    private javax.swing.JButton historyButton;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.border.LineBorder lineBorder1;
    private javax.swing.JButton logoutButton;
    private javax.swing.border.MatteBorder matteBorder1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField numberTextField;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JComboBox<String> productNameDropDown;
    private javax.swing.JTable productsTable;
    private javax.swing.JButton profileButton;
    private javax.swing.JTextField quantityTextField;
    private javax.swing.border.SoftBevelBorder softBevelBorder1;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel titleLabel1;
    private javax.swing.JLabel titleLabel3;
    private javax.swing.JButton viewProductButton;
    private javax.swing.JButton visibilityButton1;
    private javax.swing.JButton visibilityButton2;
    // End of variables declaration//GEN-END:variables

 }
